@model X.PagedList.IPagedList<User>

@{
    ViewData["Title"] = "Gerenciar Usuários";
}

<header class="d-flex flex-wrap align-content-center justify-content-md-between py-3 mb-4">
    <div class="container">
        <a asp-action="Index" asp-controller="Home" class="btn btn-primary">Voltar <i class="bi bi-arrow-bar-left"></i></a>
    </div>
</header>

<div class="container" align="center">
    <div class="p text-center">
        <i class="bi bi-person-gear default-img-icon"></i>
        <h3>Usuários</h3>
    </div>
    <br />
    <br />

    @{
        if (Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">@Html.DisplayNameFor(model => model.First().Id)</th>
                            <th scope="col">Nome completo</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.First().Email)</th>
                            <th scope="col">@Html.DisplayNameFor(model => model.First().Status)</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (User user in Model)
                        {
                            <tr>
                                <th scope="row">@user.Id</th>
                                <td>@string.Concat(user.Name, " ", user.LastName)</td>
                                <td>@user.Email</td>
                                <td>
                                    @{
                                        switch (user.Status)
                                        {
                                            case AccessManagement.Libraries.UserStatus.Inactive:
                                                <i class="bi bi-circle-fill" style="color: gray"></i><a> Inativo</a>
                                                break;
                                            case AccessManagement.Libraries.UserStatus.Active:
                                                <i class="bi bi-circle-fill" style="color: green"></i><a> Ativo</a>
                                                break;
                                            case AccessManagement.Libraries.UserStatus.Pending:
                                                <i class="bi bi-circle-fill" style="color: yellow"></i><a> Pendente</a>
                                                break;
                                            case AccessManagement.Libraries.UserStatus.Blocked:
                                                <i class="bi bi-circle-fill" style="color: red"></i><a> Bloqueado</a>
                                                break;
                                            default:
                                                break;
                                        }
                                    }
                                </td>
                                <td>
                                    <a asp-action="Alterar" asp-route-id="@user.Id" class="btn btn-secondary bi bi-pencil-square" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Alterar dados cadastrais"></a>
                                    <a asp-action="Alterar" asp-route-id="@user.Id" class="btn btn-secondary bi-person-lock" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Gerenciar acessos"></a>
                                    <a asp-action="Excluir" asp-route-id="@user.Id" class="btn btn-danger bi bi-person-x" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Excluir usuário"></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <span>Nenhum usuário encontrado!</span>
        }
    }

    <div class="row justify-content-md-center">
        <div class="col-md-auto">
            @{ await Html.RenderPartialAsync("~/Views/Shared/_Alert.cshtml"); }
        </div>
    </div>
</div>




